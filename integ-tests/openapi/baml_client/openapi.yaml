###############################################################################
#
#  Welcome to Baml! To use this generated code, please run the following:
#
#  $ openapi-generator generate -i openapi.yaml -g <language> -o <output_dir>
#
###############################################################################

# This file was generated by BAML: please do not edit it. Instead, edit the
# BAML files and re-generate this code.
paths:
  /call/AaaSamOutputFormat:
    post:
      requestBody:
        type: object
        properties:
          recipe:
            type: string
      responses:
        '200':
          application/json:
            schema:
              ref: '#/components/schemas/Recipe'
  /call/AudioInput:
    post:
      requestBody:
        type: object
        properties:
          aud:
            ref: '#/components/schemas/BamlAudio'
      responses:
        '200':
          application/json:
            schema:
              type: string
  /call/ClassifyMessage:
    post:
      requestBody:
        type: object
        properties:
          input:
            type: string
      responses:
        '200':
          application/json:
            schema:
              ref: '#/components/schemas/Category'
  /call/ClassifyMessage2:
    post:
      requestBody:
        type: object
        properties:
          input:
            type: string
      responses:
        '200':
          application/json:
            schema:
              ref: '#/components/schemas/Category'
  /call/ClassifyMessage3:
    post:
      requestBody:
        type: object
        properties:
          input:
            type: string
      responses:
        '200':
          application/json:
            schema:
              ref: '#/components/schemas/Category'
  /call/DescribeImage:
    post:
      requestBody:
        type: object
        properties:
          img:
            ref: '#/components/schemas/BamlImage'
      responses:
        '200':
          application/json:
            schema:
              type: string
  /call/DescribeImage2:
    post:
      requestBody:
        type: object
        properties:
          classWithImage:
            ref: '#/components/schemas/ClassWithImage'
          img2:
            ref: '#/components/schemas/BamlImage'
      responses:
        '200':
          application/json:
            schema:
              type: string
  /call/DescribeImage3:
    post:
      requestBody:
        type: object
        properties:
          classWithImage:
            ref: '#/components/schemas/ClassWithImage'
          img2:
            ref: '#/components/schemas/BamlImage'
      responses:
        '200':
          application/json:
            schema:
              type: string
  /call/DescribeImage4:
    post:
      requestBody:
        type: object
        properties:
          classWithImage:
            ref: '#/components/schemas/ClassWithImage'
          img2:
            ref: '#/components/schemas/BamlImage'
      responses:
        '200':
          application/json:
            schema:
              type: string
  /call/DummyOutputFunction:
    post:
      requestBody:
        type: object
        properties:
          input:
            type: string
      responses:
        '200':
          application/json:
            schema:
              ref: '#/components/schemas/DummyOutput'
  /call/DynamicFunc:
    post:
      requestBody:
        type: object
        properties:
          input:
            ref: '#/components/schemas/DynamicClassOne'
      responses:
        '200':
          application/json:
            schema:
              ref: '#/components/schemas/DynamicClassTwo'
  /call/DynamicInputOutput:
    post:
      requestBody:
        type: object
        properties:
          input:
            ref: '#/components/schemas/DynInputOutput'
      responses:
        '200':
          application/json:
            schema:
              ref: '#/components/schemas/DynInputOutput'
  /call/DynamicListInputOutput:
    post:
      requestBody:
        type: object
        properties:
          input:
            type: array
            items:
              ref: '#/components/schemas/DynInputOutput'
      responses:
        '200':
          application/json:
            schema:
              type: array
              items:
                ref: '#/components/schemas/DynInputOutput'
  /call/ExpectFailure:
    post:
      requestBody:
        type: object
        properties: {}
      responses:
        '200':
          application/json:
            schema:
              type: string
  /call/ExtractNames:
    post:
      requestBody:
        type: object
        properties:
          input:
            type: string
      responses:
        '200':
          application/json:
            schema:
              type: array
              items:
                type: string
  /call/ExtractPeople:
    post:
      requestBody:
        type: object
        properties:
          text:
            type: string
      responses:
        '200':
          application/json:
            schema:
              type: array
              items:
                ref: '#/components/schemas/Person'
  /call/ExtractReceiptInfo:
    post:
      requestBody:
        type: object
        properties:
          email:
            type: string
      responses:
        '200':
          application/json:
            schema:
              ref: '#/components/schemas/ReceiptInfo'
  /call/ExtractResume:
    post:
      requestBody:
        type: object
        properties:
          resume:
            type: string
          img:
            ref: '#/components/schemas/BamlImage'
      responses:
        '200':
          application/json:
            schema:
              ref: '#/components/schemas/Resume'
  /call/ExtractResume2:
    post:
      requestBody:
        type: object
        properties:
          resume:
            type: string
      responses:
        '200':
          application/json:
            schema:
              ref: '#/components/schemas/Resume'
  /call/FnClassOptionalOutput:
    post:
      requestBody:
        type: object
        properties:
          input:
            type: string
      responses:
        '200':
          application/json:
            schema:
              ref: '#/components/schemas/ClassOptionalOutput'
  /call/FnClassOptionalOutput2:
    post:
      requestBody:
        type: object
        properties:
          input:
            type: string
      responses:
        '200':
          application/json:
            schema:
              ref: '#/components/schemas/ClassOptionalOutput2'
  /call/FnEnumListOutput:
    post:
      requestBody:
        type: object
        properties:
          input:
            type: string
      responses:
        '200':
          application/json:
            schema:
              type: array
              items:
                ref: '#/components/schemas/EnumOutput'
  /call/FnEnumOutput:
    post:
      requestBody:
        type: object
        properties:
          input:
            type: string
      responses:
        '200':
          application/json:
            schema:
              ref: '#/components/schemas/EnumOutput'
  /call/FnNamedArgsSingleStringOptional:
    post:
      requestBody:
        type: object
        properties:
          myString:
            type: string
      responses:
        '200':
          application/json:
            schema:
              type: string
  /call/FnOutputBool:
    post:
      requestBody:
        type: object
        properties:
          input:
            type: string
      responses:
        '200':
          application/json:
            schema:
              type: boolean
  /call/FnOutputClass:
    post:
      requestBody:
        type: object
        properties:
          input:
            type: string
      responses:
        '200':
          application/json:
            schema:
              ref: '#/components/schemas/TestOutputClass'
  /call/FnOutputClassList:
    post:
      requestBody:
        type: object
        properties:
          input:
            type: string
      responses:
        '200':
          application/json:
            schema:
              type: array
              items:
                ref: '#/components/schemas/TestOutputClass'
  /call/FnOutputClassNested:
    post:
      requestBody:
        type: object
        properties:
          input:
            type: string
      responses:
        '200':
          application/json:
            schema:
              ref: '#/components/schemas/TestClassNested'
  /call/FnOutputClassWithEnum:
    post:
      requestBody:
        type: object
        properties:
          input:
            type: string
      responses:
        '200':
          application/json:
            schema:
              ref: '#/components/schemas/TestClassWithEnum'
  /call/FnOutputStringList:
    post:
      requestBody:
        type: object
        properties:
          input:
            type: string
      responses:
        '200':
          application/json:
            schema:
              type: array
              items:
                type: string
  /call/FnTestAliasedEnumOutput:
    post:
      requestBody:
        type: object
        properties:
          input:
            type: string
      responses:
        '200':
          application/json:
            schema:
              ref: '#/components/schemas/TestEnum'
  /call/FnTestClassAlias:
    post:
      requestBody:
        type: object
        properties:
          input:
            type: string
      responses:
        '200':
          application/json:
            schema:
              ref: '#/components/schemas/TestClassAlias'
  /call/FnTestNamedArgsSingleEnum:
    post:
      requestBody:
        type: object
        properties:
          myArg:
            ref: '#/components/schemas/NamedArgsSingleEnum'
      responses:
        '200':
          application/json:
            schema:
              type: string
  /call/GetDataType:
    post:
      requestBody:
        type: object
        properties:
          text:
            type: string
      responses:
        '200':
          application/json:
            schema:
              ref: '#/components/schemas/RaysData'
  /call/GetOrderInfo:
    post:
      requestBody:
        type: object
        properties:
          email:
            ref: '#/components/schemas/Email'
      responses:
        '200':
          application/json:
            schema:
              ref: '#/components/schemas/OrderInfo'
  /call/GetQuery:
    post:
      requestBody:
        type: object
        properties:
          query:
            type: string
      responses:
        '200':
          application/json:
            schema:
              ref: '#/components/schemas/SearchParams'
  /call/MyFunc:
    post:
      requestBody:
        type: object
        properties:
          input:
            type: string
      responses:
        '200':
          application/json:
            schema:
              ref: '#/components/schemas/DynamicOutput'
  /call/OptionalTest_Function:
    post:
      requestBody:
        type: object
        properties:
          input:
            type: string
      responses:
        '200':
          application/json:
            schema:
              type: array
              items:
                ref: '#/components/schemas/OptionalTest_ReturnType'
  /call/PromptTestClaude:
    post:
      requestBody:
        type: object
        properties:
          input:
            type: string
      responses:
        '200':
          application/json:
            schema:
              type: string
  /call/PromptTestClaudeChat:
    post:
      requestBody:
        type: object
        properties:
          input:
            type: string
      responses:
        '200':
          application/json:
            schema:
              type: string
  /call/PromptTestClaudeChatNoSystem:
    post:
      requestBody:
        type: object
        properties:
          input:
            type: string
      responses:
        '200':
          application/json:
            schema:
              type: string
  /call/PromptTestOpenAI:
    post:
      requestBody:
        type: object
        properties:
          input:
            type: string
      responses:
        '200':
          application/json:
            schema:
              type: string
  /call/PromptTestOpenAIChat:
    post:
      requestBody:
        type: object
        properties:
          input:
            type: string
      responses:
        '200':
          application/json:
            schema:
              type: string
  /call/PromptTestOpenAIChatNoSystem:
    post:
      requestBody:
        type: object
        properties:
          input:
            type: string
      responses:
        '200':
          application/json:
            schema:
              type: string
  /call/PromptTestStreaming:
    post:
      requestBody:
        type: object
        properties:
          input:
            type: string
      responses:
        '200':
          application/json:
            schema:
              type: string
  /call/TestAnthropic:
    post:
      requestBody:
        type: object
        properties:
          input:
            type: string
      responses:
        '200':
          application/json:
            schema:
              type: string
  /call/TestAws:
    post:
      requestBody:
        type: object
        properties:
          input:
            type: string
      responses:
        '200':
          application/json:
            schema:
              type: string
  /call/TestAzure:
    post:
      requestBody:
        type: object
        properties:
          input:
            type: string
      responses:
        '200':
          application/json:
            schema:
              type: string
  /call/TestFallbackClient:
    post:
      requestBody:
        type: object
        properties: {}
      responses:
        '200':
          application/json:
            schema:
              type: string
  /call/TestFnNamedArgsSingleBool:
    post:
      requestBody:
        type: object
        properties:
          myBool:
            type: boolean
      responses:
        '200':
          application/json:
            schema:
              type: string
  /call/TestFnNamedArgsSingleClass:
    post:
      requestBody:
        type: object
        properties:
          myArg:
            ref: '#/components/schemas/NamedArgsSingleClass'
      responses:
        '200':
          application/json:
            schema:
              type: string
  /call/TestFnNamedArgsSingleEnumList:
    post:
      requestBody:
        type: object
        properties:
          myArg:
            type: array
            items:
              ref: '#/components/schemas/NamedArgsSingleEnumList'
      responses:
        '200':
          application/json:
            schema:
              type: string
  /call/TestFnNamedArgsSingleFloat:
    post:
      requestBody:
        type: object
        properties:
          myFloat:
            type: number
            format: double
      responses:
        '200':
          application/json:
            schema:
              type: string
  /call/TestFnNamedArgsSingleInt:
    post:
      requestBody:
        type: object
        properties:
          myInt:
            type: integer
            format: int64
      responses:
        '200':
          application/json:
            schema:
              type: string
  /call/TestFnNamedArgsSingleMapStringToClass:
    post:
      requestBody:
        type: object
        properties:
          myMap:
            type: object
            additional_properties:
              ref: '#/components/schemas/StringToClassEntry'
      responses:
        '200':
          application/json:
            schema:
              type: object
              additional_properties:
                ref: '#/components/schemas/StringToClassEntry'
  /call/TestFnNamedArgsSingleMapStringToMap:
    post:
      requestBody:
        type: object
        properties:
          myMap:
            type: object
            additional_properties:
              type: object
              additional_properties:
                type: string
      responses:
        '200':
          application/json:
            schema:
              type: object
              additional_properties:
                type: object
                additional_properties:
                  type: string
  /call/TestFnNamedArgsSingleMapStringToString:
    post:
      requestBody:
        type: object
        properties:
          myMap:
            type: object
            additional_properties:
              type: string
      responses:
        '200':
          application/json:
            schema:
              type: object
              additional_properties:
                type: string
  /call/TestFnNamedArgsSingleString:
    post:
      requestBody:
        type: object
        properties:
          myString:
            type: string
      responses:
        '200':
          application/json:
            schema:
              type: string
  /call/TestFnNamedArgsSingleStringArray:
    post:
      requestBody:
        type: object
        properties:
          myStringArray:
            type: array
            items:
              type: string
      responses:
        '200':
          application/json:
            schema:
              type: string
  /call/TestFnNamedArgsSingleStringList:
    post:
      requestBody:
        type: object
        properties:
          myArg:
            type: array
            items:
              type: string
      responses:
        '200':
          application/json:
            schema:
              type: string
  /call/TestGemini:
    post:
      requestBody:
        type: object
        properties:
          input:
            type: string
      responses:
        '200':
          application/json:
            schema:
              type: string
  /call/TestImageInput:
    post:
      requestBody:
        type: object
        properties:
          img:
            ref: '#/components/schemas/BamlImage'
      responses:
        '200':
          application/json:
            schema:
              type: string
  /call/TestImageInputAnthropic:
    post:
      requestBody:
        type: object
        properties:
          img:
            ref: '#/components/schemas/BamlImage'
      responses:
        '200':
          application/json:
            schema:
              type: string
  /call/TestImageListInput:
    post:
      requestBody:
        type: object
        properties:
          imgs:
            type: array
            items:
              ref: '#/components/schemas/BamlImage'
      responses:
        '200':
          application/json:
            schema:
              type: string
  /call/TestMulticlassNamedArgs:
    post:
      requestBody:
        type: object
        properties:
          myArg:
            ref: '#/components/schemas/NamedArgsSingleClass'
          myArg2:
            ref: '#/components/schemas/NamedArgsSingleClass'
      responses:
        '200':
          application/json:
            schema:
              type: string
  /call/TestOllama:
    post:
      requestBody:
        type: object
        properties:
          input:
            type: string
      responses:
        '200':
          application/json:
            schema:
              type: string
  /call/TestOpenAILegacyProvider:
    post:
      requestBody:
        type: object
        properties:
          input:
            type: string
      responses:
        '200':
          application/json:
            schema:
              type: string
  /call/TestRetryConstant:
    post:
      requestBody:
        type: object
        properties: {}
      responses:
        '200':
          application/json:
            schema:
              type: string
  /call/TestRetryExponential:
    post:
      requestBody:
        type: object
        properties: {}
      responses:
        '200':
          application/json:
            schema:
              type: string
  /call/TestVertex:
    post:
      requestBody:
        type: object
        properties:
          input:
            type: string
      responses:
        '200':
          application/json:
            schema:
              type: string
  /call/UnionTest_Function:
    post:
      requestBody:
        type: object
        properties:
          input:
            any_of:
            - type: string
            - type: boolean
      responses:
        '200':
          application/json:
            schema:
              ref: '#/components/schemas/UnionTest_ReturnType'
schemas:
  Blah:
    type: object
    properties:
      prop4:
        type: string
  ClassOptionalOutput:
    type: object
    properties:
      prop1:
        type: string
      prop2:
        type: string
  ClassOptionalOutput2:
    type: object
    properties:
      prop1:
        type: string
      prop2:
        type: string
      prop3:
        ref: '#/components/schemas/Blah'
  ClassWithImage:
    type: object
    properties:
      myImage:
        ref: '#/components/schemas/BamlImage'
      param2:
        type: string
      fake_image:
        ref: '#/components/schemas/FakeImage'
  DummyOutput:
    type: object
    properties:
      nonce:
        type: string
      nonce2:
        type: string
  DynInputOutput:
    type: object
    properties:
      testKey:
        type: string
  DynamicClassOne:
    type: object
    properties: {}
  DynamicClassTwo:
    type: object
    properties:
      hi:
        type: string
      some_class:
        ref: '#/components/schemas/SomeClassNestedDynamic'
      status:
        ref: '#/components/schemas/DynEnumOne'
  DynamicOutput:
    type: object
    properties: {}
  Education:
    type: object
    properties:
      institution:
        type: string
      location:
        type: string
      degree:
        type: string
      major:
        type: array
        items:
          type: string
      graduation_date:
        type: string
  Email:
    type: object
    properties:
      subject:
        type: string
      body:
        type: string
      from_address:
        type: string
  Event:
    type: object
    properties:
      title:
        type: string
      date:
        type: string
      location:
        type: string
      description:
        type: string
  FakeImage:
    type: object
    properties:
      url:
        type: string
  InnerClass:
    type: object
    properties:
      prop1:
        type: string
      prop2:
        type: string
      inner:
        ref: '#/components/schemas/InnerClass2'
  InnerClass2:
    type: object
    properties:
      prop2:
        type: integer
        format: int64
      prop3:
        type: number
        format: double
  NamedArgsSingleClass:
    type: object
    properties:
      key:
        type: string
      key_two:
        type: boolean
      key_three:
        type: integer
        format: int64
  OptionalTest_Prop1:
    type: object
    properties:
      omega_a:
        type: string
      omega_b:
        type: integer
        format: int64
  OptionalTest_ReturnType:
    type: object
    properties:
      omega_1:
        ref: '#/components/schemas/OptionalTest_Prop1'
      omega_2:
        type: string
      omega_3:
        type: array
        items:
          ref: '#/components/schemas/OptionalTest_CategoryType'
  OrderInfo:
    type: object
    properties:
      order_status:
        ref: '#/components/schemas/OrderStatus'
      tracking_number:
        type: string
      estimated_arrival_date:
        type: string
  Person:
    type: object
    properties:
      name:
        type: string
      hair_color:
        ref: '#/components/schemas/Color'
  Quantity:
    type: object
    properties:
      amount:
        any_of:
        - type: integer
          format: int64
        - type: number
          format: double
      unit:
        type: string
  RaysData:
    type: object
    properties:
      dataType:
        ref: '#/components/schemas/DataType'
      value:
        any_of:
        - ref: '#/components/schemas/Resume'
        - ref: '#/components/schemas/Event'
  ReceiptInfo:
    type: object
    properties:
      items:
        type: array
        items:
          ref: '#/components/schemas/ReceiptItem'
      total_cost:
        type: number
        format: double
  ReceiptItem:
    type: object
    properties:
      name:
        type: string
      description:
        type: string
      quantity:
        type: integer
        format: int64
      price:
        type: number
        format: double
  Recipe:
    type: object
    properties:
      ingredients:
        type: object
        additional_properties:
          ref: '#/components/schemas/Quantity'
  Resume:
    type: object
    properties:
      name:
        type: string
      email:
        type: string
      phone:
        type: string
      experience:
        type: array
        items:
          ref: '#/components/schemas/Education'
      education:
        type: array
        items:
          type: string
      skills:
        type: array
        items:
          type: string
  SearchParams:
    type: object
    properties:
      dateRange:
        type: integer
        format: int64
      location:
        type: array
        items:
          type: string
      jobTitle:
        ref: '#/components/schemas/WithReasoning'
      company:
        ref: '#/components/schemas/WithReasoning'
      description:
        type: array
        items:
          ref: '#/components/schemas/WithReasoning'
      tags:
        type: array
        items:
          any_of:
          - ref: '#/components/schemas/Tag'
          - type: string
  SomeClassNestedDynamic:
    type: object
    properties:
      hi:
        type: string
  StringToClassEntry:
    type: object
    properties:
      word:
        type: string
  TestClassAlias:
    type: object
    properties:
      key:
        type: string
      key2:
        type: string
      key3:
        type: string
      key4:
        type: string
      key5:
        type: string
  TestClassNested:
    type: object
    properties:
      prop1:
        type: string
      prop2:
        ref: '#/components/schemas/InnerClass'
  TestClassWithEnum:
    type: object
    properties:
      prop1:
        type: string
      prop2:
        ref: '#/components/schemas/EnumInClass'
  TestOutputClass:
    type: object
    properties:
      prop1:
        type: string
      prop2:
        type: integer
        format: int64
  UnionTest_ReturnType:
    type: object
    properties:
      prop1:
        any_of:
        - type: string
        - type: boolean
      prop2:
        type: array
        items:
          any_of:
          - type: number
            format: double
          - type: boolean
      prop3:
        any_of:
        - type: array
          items:
            type: boolean
        - type: array
          items:
            type: integer
            format: int64
  WithReasoning:
    type: object
    properties:
      value:
        type: string
      reasoning:
        type: string
