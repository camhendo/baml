name: Release language_client_typescript

on:
  workflow_call: {}
  push:
    branches: [sam/glibc-aarch64]

concurrency:
  # suffix is important to prevent a concurrency deadlock with the calling workflow
  group: ${{ github.workflow }}-${{ github.ref }}-build-typescript
  cancel-in-progress: true

jobs:
  build-typescript-release:
    strategy:
      fail-fast: false
      matrix:
        _:
          - target: aarch64-apple-darwin
            host: macos-14
            node_build: pnpm build --target aarch64-apple-darwin
            baml_build_help: "off"
            # mise: true

          # Disabled as python is not supported on aarch64 windows
          # - target: aarch64-pc-windows-msvc
          #   host: windows-latest
          #   node_build: pnpm build --target aarch64-pc-windows-msvc

          - target: aarch64-unknown-linux-gnu
            host: ubuntu-latest
            # from https://github.com/PyO3/maturin-action?tab=readme-ov-file#manylinux-docker-container
            # need a new version of manylinux to build crates on arm64-linux
            container: ghcr.io/rust-cross/manylinux_2_28-cross:aarch64
            node_build: pnpm build --target aarch64-unknown-linux-gnu --use-napi-cross
            cargo_args: -p baml-typescript-ffi -p baml-python-ffi
            baml_build_help: "off"

          - target: x86_64-apple-darwin
            host: macos-latest
            node_build: pnpm build --target x86_64-apple-darwin
            baml_build_help: "off"
            # mise: true

          - target: x86_64-pc-windows-msvc
            host: windows-latest
            node_build: pnpm build --target x86_64-pc-windows-msvc
            cargo_args: -p baml-typescript-ffi -p baml-python-ffi
            baml_build_help: "off"

          - target: x86_64-unknown-linux-gnu
            host: ubuntu-latest
            # Using any of the manylinux containers breaks a bunch of stuff: actions/checkout here, pnpm build there - not worth it.
            container: null
            node_build: pnpm build --target x86_64-unknown-linux-gnu --use-napi-cross

    name: Build ${{ matrix._.target }}
    runs-on: ${{ matrix._.host }}
    container: ${{ matrix._.container }}
    steps:
      - uses: actions/checkout@v4

      - uses: pnpm/action-setup@v3
        with:
          version: 9.0.6
          run_install: false

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: pnpm
          cache-dependency-path: |
            engine/language_client_typescript/pnpm-lock.yaml

      # Install rust
      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          targets: ${{ matrix._.target }}

      # Install steps
      - name: PNPM Install
        run: pnpm install --frozen-lockfile
        working-directory: engine/language_client_typescript

      # Rust caching
      - uses: Swatinem/rust-cache@v2
        with:
          workspaces: engine
          shared-key: engine-${{ github.job }}-${{ matrix._.target }}
          cache-on-failure: true
        
      # Build Node
      - name: PNPM Build
        run: ${{ matrix._.node_build }}
        working-directory: engine/language_client_typescript
        
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: bindings-${{ matrix._.target }}
          path: engine/language_client_typescript/*.node
          if-no-files-found: error
