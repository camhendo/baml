###############################################################################
#
#  Welcome to Baml! To use this generated code, please run the following:
#
#  $ openapi-generator generate -i openapi.yaml -g <language> -o <output_dir>
#
###############################################################################

# This file was generated by BAML: please do not edit it. Instead, edit the
# BAML files and re-generate this code.
openapi: 3.0.0
info:
  description: baml-cli serve
  version: 0.1.0
  title: baml-cli serve
paths:
  /call/AaaSamOutputFormat:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                recipe:
                  type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Recipe'
  /call/AudioInput:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                aud:
                  $ref: '#/components/schemas/BamlAudio'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: string
  /call/ClassifyMessage:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                input:
                  type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
  /call/ClassifyMessage2:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                input:
                  type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
  /call/ClassifyMessage3:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                input:
                  type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
  /call/DescribeImage:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                img:
                  $ref: '#/components/schemas/BamlImage'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: string
  /call/DescribeImage2:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                classWithImage:
                  $ref: '#/components/schemas/ClassWithImage'
                img2:
                  $ref: '#/components/schemas/BamlImage'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: string
  /call/DescribeImage3:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                classWithImage:
                  $ref: '#/components/schemas/ClassWithImage'
                img2:
                  $ref: '#/components/schemas/BamlImage'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: string
  /call/DescribeImage4:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                classWithImage:
                  $ref: '#/components/schemas/ClassWithImage'
                img2:
                  $ref: '#/components/schemas/BamlImage'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: string
  /call/DummyOutputFunction:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                input:
                  type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DummyOutput'
  /call/DynamicFunc:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                input:
                  $ref: '#/components/schemas/DynamicClassOne'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DynamicClassTwo'
  /call/DynamicInputOutput:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                input:
                  $ref: '#/components/schemas/DynInputOutput'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DynInputOutput'
  /call/DynamicListInputOutput:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                input:
                  type: array
                  items:
                    $ref: '#/components/schemas/DynInputOutput'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DynInputOutput'
  /call/ExpectFailure:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties: {}
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: string
  /call/ExtractNames:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                input:
                  type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
  /call/ExtractPeople:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                text:
                  type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Person'
  /call/ExtractReceiptInfo:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReceiptInfo'
  /call/ExtractResume:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                resume:
                  type: string
                img:
                  $ref: '#/components/schemas/BamlImage'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resume'
  /call/ExtractResume2:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                resume:
                  type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resume'
  /call/FnClassOptionalOutput:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                input:
                  type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClassOptionalOutput'
  /call/FnClassOptionalOutput2:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                input:
                  type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClassOptionalOutput2'
  /call/FnEnumListOutput:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                input:
                  type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EnumOutput'
  /call/FnEnumOutput:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                input:
                  type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnumOutput'
  /call/FnNamedArgsSingleStringOptional:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                myString:
                  type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: string
  /call/FnOutputBool:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                input:
                  type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: boolean
  /call/FnOutputClass:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                input:
                  type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestOutputClass'
  /call/FnOutputClassList:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                input:
                  type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TestOutputClass'
  /call/FnOutputClassNested:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                input:
                  type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestClassNested'
  /call/FnOutputClassWithEnum:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                input:
                  type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestClassWithEnum'
  /call/FnOutputStringList:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                input:
                  type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
  /call/FnTestAliasedEnumOutput:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                input:
                  type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestEnum'
  /call/FnTestClassAlias:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                input:
                  type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestClassAlias'
  /call/FnTestNamedArgsSingleEnum:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                myArg:
                  $ref: '#/components/schemas/NamedArgsSingleEnum'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: string
  /call/GetDataType:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                text:
                  type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RaysData'
  /call/GetOrderInfo:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  $ref: '#/components/schemas/Email'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderInfo'
  /call/GetQuery:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                query:
                  type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchParams'
  /call/MyFunc:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                input:
                  type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DynamicOutput'
  /call/OptionalTest_Function:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                input:
                  type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OptionalTest_ReturnType'
  /call/PromptTestClaude:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                input:
                  type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: string
  /call/PromptTestClaudeChat:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                input:
                  type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: string
  /call/PromptTestClaudeChatNoSystem:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                input:
                  type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: string
  /call/PromptTestOpenAI:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                input:
                  type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: string
  /call/PromptTestOpenAIChat:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                input:
                  type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: string
  /call/PromptTestOpenAIChatNoSystem:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                input:
                  type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: string
  /call/PromptTestStreaming:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                input:
                  type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: string
  /call/TestAnthropic:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                input:
                  type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: string
  /call/TestAws:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                input:
                  type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: string
  /call/TestAzure:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                input:
                  type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: string
  /call/TestFallbackClient:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties: {}
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: string
  /call/TestFnNamedArgsSingleBool:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                myBool:
                  type: boolean
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: string
  /call/TestFnNamedArgsSingleClass:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                myArg:
                  $ref: '#/components/schemas/NamedArgsSingleClass'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: string
  /call/TestFnNamedArgsSingleEnumList:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                myArg:
                  type: array
                  items:
                    $ref: '#/components/schemas/NamedArgsSingleEnumList'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: string
  /call/TestFnNamedArgsSingleFloat:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                myFloat:
                  type: number
                  format: double
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: string
  /call/TestFnNamedArgsSingleInt:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                myInt:
                  type: integer
                  format: int64
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: string
  /call/TestFnNamedArgsSingleMapStringToClass:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                myMap:
                  type: object
                  additionalProperties:
                    $ref: '#/components/schemas/StringToClassEntry'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  $ref: '#/components/schemas/StringToClassEntry'
  /call/TestFnNamedArgsSingleMapStringToMap:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                myMap:
                  type: object
                  additionalProperties:
                    type: object
                    additionalProperties:
                      type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
                  additionalProperties:
                    type: string
  /call/TestFnNamedArgsSingleMapStringToString:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                myMap:
                  type: object
                  additionalProperties:
                    type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: string
  /call/TestFnNamedArgsSingleString:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                myString:
                  type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: string
  /call/TestFnNamedArgsSingleStringArray:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                myStringArray:
                  type: array
                  items:
                    type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: string
  /call/TestFnNamedArgsSingleStringList:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                myArg:
                  type: array
                  items:
                    type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: string
  /call/TestGemini:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                input:
                  type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: string
  /call/TestImageInput:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                img:
                  $ref: '#/components/schemas/BamlImage'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: string
  /call/TestImageInputAnthropic:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                img:
                  $ref: '#/components/schemas/BamlImage'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: string
  /call/TestImageListInput:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                imgs:
                  type: array
                  items:
                    $ref: '#/components/schemas/BamlImage'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: string
  /call/TestMulticlassNamedArgs:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                myArg:
                  $ref: '#/components/schemas/NamedArgsSingleClass'
                myArg2:
                  $ref: '#/components/schemas/NamedArgsSingleClass'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: string
  /call/TestOllama:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                input:
                  type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: string
  /call/TestOpenAILegacyProvider:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                input:
                  type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: string
  /call/TestRetryConstant:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties: {}
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: string
  /call/TestRetryExponential:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties: {}
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: string
  /call/TestVertex:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                input:
                  type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: string
  /call/UnionTest_Function:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                input:
                  anyOf:
                  - type: string
                  - type: boolean
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnionTest_ReturnType'
components:
  schemas:
    BamlImage:
      type: object
      properties:
        base64:
          type: string
    BamlAudio:
      type: object
      properties:
        base64:
          type: string
    Category:
      type: string
      enum:
      - Refund
      - CancelOrder
      - TechnicalSupport
      - AccountIssue
      - Question
    Category2:
      type: string
      enum:
      - Refund
      - CancelOrder
      - TechnicalSupport
      - AccountIssue
      - Question
    Category3:
      type: string
      enum:
      - Refund
      - CancelOrder
      - TechnicalSupport
      - AccountIssue
      - Question
    Color:
      type: string
      enum:
      - RED
      - BLUE
      - GREEN
      - YELLOW
      - BLACK
      - WHITE
    DataType:
      type: string
      enum:
      - Resume
      - Event
    DynEnumOne:
      type: string
      enum: []
    DynEnumTwo:
      type: string
      enum: []
    EnumInClass:
      type: string
      enum:
      - ONE
      - TWO
    EnumOutput:
      type: string
      enum:
      - ONE
      - TWO
      - THREE
    Hobby:
      type: string
      enum:
      - SPORTS
      - MUSIC
      - READING
    NamedArgsSingleEnum:
      type: string
      enum:
      - ONE
      - TWO
    NamedArgsSingleEnumList:
      type: string
      enum:
      - ONE
      - TWO
    OptionalTest_CategoryType:
      type: string
      enum:
      - Aleph
      - Beta
      - Gamma
    OrderStatus:
      type: string
      enum:
      - ORDERED
      - SHIPPED
      - DELIVERED
      - CANCELLED
    Tag:
      type: string
      enum:
      - Security
      - AI
      - Blockchain
    TestEnum:
      type: string
      enum:
      - A
      - B
      - C
      - D
      - E
      - F
      - G
    Blah:
      type: object
      properties:
        prop4:
          type: string
    ClassOptionalOutput:
      type: object
      properties:
        prop1:
          type: string
        prop2:
          type: string
    ClassOptionalOutput2:
      type: object
      properties:
        prop1:
          type: string
        prop2:
          type: string
        prop3:
          $ref: '#/components/schemas/Blah'
    ClassWithImage:
      type: object
      properties:
        myImage:
          $ref: '#/components/schemas/BamlImage'
        param2:
          type: string
        fake_image:
          $ref: '#/components/schemas/FakeImage'
    DummyOutput:
      type: object
      properties:
        nonce:
          type: string
        nonce2:
          type: string
    DynInputOutput:
      type: object
      properties:
        testKey:
          type: string
    DynamicClassOne:
      type: object
      properties: {}
    DynamicClassTwo:
      type: object
      properties:
        hi:
          type: string
        some_class:
          $ref: '#/components/schemas/SomeClassNestedDynamic'
        status:
          $ref: '#/components/schemas/DynEnumOne'
    DynamicOutput:
      type: object
      properties: {}
    Education:
      type: object
      properties:
        institution:
          type: string
        location:
          type: string
        degree:
          type: string
        major:
          type: array
          items:
            type: string
        graduation_date:
          type: string
    Email:
      type: object
      properties:
        subject:
          type: string
        body:
          type: string
        from_address:
          type: string
    Event:
      type: object
      properties:
        title:
          type: string
        date:
          type: string
        location:
          type: string
        description:
          type: string
    FakeImage:
      type: object
      properties:
        url:
          type: string
    InnerClass:
      type: object
      properties:
        prop1:
          type: string
        prop2:
          type: string
        inner:
          $ref: '#/components/schemas/InnerClass2'
    InnerClass2:
      type: object
      properties:
        prop2:
          type: integer
          format: int64
        prop3:
          type: number
          format: double
    NamedArgsSingleClass:
      type: object
      properties:
        key:
          type: string
        key_two:
          type: boolean
        key_three:
          type: integer
          format: int64
    OptionalTest_Prop1:
      type: object
      properties:
        omega_a:
          type: string
        omega_b:
          type: integer
          format: int64
    OptionalTest_ReturnType:
      type: object
      properties:
        omega_1:
          $ref: '#/components/schemas/OptionalTest_Prop1'
        omega_2:
          type: string
        omega_3:
          type: array
          items:
            $ref: '#/components/schemas/OptionalTest_CategoryType'
    OrderInfo:
      type: object
      properties:
        order_status:
          $ref: '#/components/schemas/OrderStatus'
        tracking_number:
          type: string
        estimated_arrival_date:
          type: string
    Person:
      type: object
      properties:
        name:
          type: string
        hair_color:
          $ref: '#/components/schemas/Color'
    Quantity:
      type: object
      properties:
        amount:
          anyOf:
          - type: integer
            format: int64
          - type: number
            format: double
        unit:
          type: string
    RaysData:
      type: object
      properties:
        dataType:
          $ref: '#/components/schemas/DataType'
        value:
          anyOf:
          - $ref: '#/components/schemas/Resume'
          - $ref: '#/components/schemas/Event'
    ReceiptInfo:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/ReceiptItem'
        total_cost:
          type: number
          format: double
    ReceiptItem:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        quantity:
          type: integer
          format: int64
        price:
          type: number
          format: double
    Recipe:
      type: object
      properties:
        ingredients:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/Quantity'
    Resume:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        phone:
          type: string
        experience:
          type: array
          items:
            $ref: '#/components/schemas/Education'
        education:
          type: array
          items:
            type: string
        skills:
          type: array
          items:
            type: string
    SearchParams:
      type: object
      properties:
        dateRange:
          type: integer
          format: int64
        location:
          type: array
          items:
            type: string
        jobTitle:
          $ref: '#/components/schemas/WithReasoning'
        company:
          $ref: '#/components/schemas/WithReasoning'
        description:
          type: array
          items:
            $ref: '#/components/schemas/WithReasoning'
        tags:
          type: array
          items:
            anyOf:
            - $ref: '#/components/schemas/Tag'
            - type: string
    SomeClassNestedDynamic:
      type: object
      properties:
        hi:
          type: string
    StringToClassEntry:
      type: object
      properties:
        word:
          type: string
    TestClassAlias:
      type: object
      properties:
        key:
          type: string
        key2:
          type: string
        key3:
          type: string
        key4:
          type: string
        key5:
          type: string
    TestClassNested:
      type: object
      properties:
        prop1:
          type: string
        prop2:
          $ref: '#/components/schemas/InnerClass'
    TestClassWithEnum:
      type: object
      properties:
        prop1:
          type: string
        prop2:
          $ref: '#/components/schemas/EnumInClass'
    TestOutputClass:
      type: object
      properties:
        prop1:
          type: string
        prop2:
          type: integer
          format: int64
    UnionTest_ReturnType:
      type: object
      properties:
        prop1:
          anyOf:
          - type: string
          - type: boolean
        prop2:
          type: array
          items:
            anyOf:
            - type: number
              format: double
            - type: boolean
        prop3:
          anyOf:
          - type: array
            items:
              type: boolean
          - type: array
            items:
              type: integer
              format: int64
    WithReasoning:
      type: object
      properties:
        value:
          type: string
        reasoning:
          type: string
